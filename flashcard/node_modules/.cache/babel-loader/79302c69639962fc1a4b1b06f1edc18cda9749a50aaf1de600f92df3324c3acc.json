{"ast":null,"code":"var _jsxFileName = \"C:\\\\Resources\\\\React_app\\\\flashcard\\\\src\\\\components\\\\NewQuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from \"../features/topics/topicsSlice\";\nimport { addQuizz } from \"../features/quizzes/quizzesSlice\";\nimport { addCard } from \"../features/cards/cardsSlice\";\n// import selectors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics); // Replace with topics \n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    cards.forEach(card => {\n      let id = uuidv4();\n      let newCard = {\n        ...card,\n        [id]: id\n      };\n      console.log(newCard);\n      cardIds.push(id);\n      dispatch(addCard(newCard));\n    });\n\n    // create the new quiz here\n\n    const quizId = uuidv4();\n    const newQuizz = {\n      id: quizId,\n      topicId: topicId,\n      name: name,\n      cardIds: cardIds\n    };\n    // dispatch add quiz action \n    dispatch(addQuizz(newQuizz));\n    console.log(topics);\n    navigate(ROUTES.quizzesRoute());\n  };\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    }));\n  };\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quiz-name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value),\n        placeholder: \"Quiz Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quiz-topic\",\n        onChange: e => setTopicId(e.currentTarget.value),\n        placeholder: \"Topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-front-${index}`,\n          value: cards[index].front,\n          onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n          placeholder: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-back-${index}`,\n          value: cards[index].back,\n          onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n          placeholder: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, index),\n          className: \"remove-card-button\",\n          children: \"Remove Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardInputs,\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuizForm, \"m0vMFlwVka2q8yLxoiY9z9znCaU=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = NewQuizForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","selectTopics","addQuizz","addCard","jsxDEV","_jsxDEV","NewQuizForm","_s","name","setName","cards","setCards","topicId","setTopicId","navigate","topics","dispatch","handleSubmit","e","preventDefault","length","cardIds","forEach","card","id","newCard","console","log","push","quizId","newQuizz","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","i","updateCardState","side","value","newCards","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","currentTarget","placeholder","Object","values","map","topic","className","onClick","type","_c","$RefreshReg$"],"sources":["C:/Resources/React_app/flashcard/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from \"../features/topics/topicsSlice\";\nimport { addQuizz } from \"../features/quizzes/quizzesSlice\";\nimport { addCard } from \"../features/cards/cardsSlice\";\n// import selectors\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics);  // Replace with topics \n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    cards.forEach(card=>{\n      let id =uuidv4()\n      let newCard= {\n        ...card,\n        [id]: id\n      }\n      console.log(newCard)\n      cardIds.push(id)\n      dispatch(addCard(newCard))\n    })\n    \n    // create the new quiz here\n\n    const quizId = uuidv4();\n    const newQuizz= {\n      id: quizId,\n      topicId: topicId,\n      name: name,\n      cardIds: cardIds\n    }\n    // dispatch add quiz action \n    dispatch(addQuizz(newQuizz))\n    console.log(topics)\n    navigate(ROUTES.quizzesRoute())\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button type=\"submit\">Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}